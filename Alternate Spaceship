{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1orafbNtjIEmAZoGbOkf_rkZrh-AY2efk","authorship_tag":"ABX9TyNEomfTJBPtmKR6vdtU8XSK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Import Libraries"],"metadata":{"id":"Twtd2DSWY6dE"}},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from google.colab import drive\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.ensemble import RandomForestClassifier"],"metadata":{"id":"Yhc91HOVZFmh","executionInfo":{"status":"ok","timestamp":1669881239298,"user_tz":-330,"elapsed":1558,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["# Mount Drive"],"metadata":{"id":"1q9_81HDdDPX"}},{"cell_type":"code","source":["drive.mount(\"/content/gdrive\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S3fScdxob7uF","executionInfo":{"status":"ok","timestamp":1669881245300,"user_tz":-330,"elapsed":6005,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"outputId":"45bac605-e483-48be-86a1-1982d7576a75"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"markdown","source":["# Import Dataset"],"metadata":{"id":"ntX6pftJZJ8i"}},{"cell_type":"code","source":["dataset = pd.read_csv('/content/gdrive/My Drive/You & Me/Sem 1/BA/BA Project - Spaceship Titanic/train.csv')\n","testDataset = pd.read_csv('/content/gdrive/My Drive/You & Me/Sem 1/BA/BA Project - Spaceship Titanic/test.csv')"],"metadata":{"id":"czPOxFQGZMmS","executionInfo":{"status":"ok","timestamp":1669881245302,"user_tz":-330,"elapsed":11,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# Analyze Data"],"metadata":{"id":"O6e_-hXQgyuw"}},{"cell_type":"code","source":["dataset.info()\n","testDataset.info()\n","dataset.describe()\n","testDataset.describe()"],"metadata":{"id":"UdB6MFIOg3Gn","executionInfo":{"status":"ok","timestamp":1669881245303,"user_tz":-330,"elapsed":11,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"c0b6b3d7-5034-47ff-bba2-d7681150736c"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8693 entries, 0 to 8692\n","Data columns (total 14 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   PassengerId   8693 non-null   object \n"," 1   HomePlanet    8492 non-null   object \n"," 2   CryoSleep     8476 non-null   object \n"," 3   Cabin         8494 non-null   object \n"," 4   Destination   8511 non-null   object \n"," 5   Age           8514 non-null   float64\n"," 6   VIP           8490 non-null   object \n"," 7   RoomService   8512 non-null   float64\n"," 8   FoodCourt     8510 non-null   float64\n"," 9   ShoppingMall  8485 non-null   float64\n"," 10  Spa           8510 non-null   float64\n"," 11  VRDeck        8505 non-null   float64\n"," 12  Name          8493 non-null   object \n"," 13  Transported   8693 non-null   bool   \n","dtypes: bool(1), float64(6), object(7)\n","memory usage: 891.5+ KB\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4277 entries, 0 to 4276\n","Data columns (total 13 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   PassengerId   4277 non-null   object \n"," 1   HomePlanet    4190 non-null   object \n"," 2   CryoSleep     4184 non-null   object \n"," 3   Cabin         4177 non-null   object \n"," 4   Destination   4185 non-null   object \n"," 5   Age           4186 non-null   float64\n"," 6   VIP           4184 non-null   object \n"," 7   RoomService   4195 non-null   float64\n"," 8   FoodCourt     4171 non-null   float64\n"," 9   ShoppingMall  4179 non-null   float64\n"," 10  Spa           4176 non-null   float64\n"," 11  VRDeck        4197 non-null   float64\n"," 12  Name          4183 non-null   object \n","dtypes: float64(6), object(7)\n","memory usage: 434.5+ KB\n"]},{"output_type":"execute_result","data":{"text/plain":["               Age   RoomService     FoodCourt  ShoppingMall           Spa  \\\n","count  4186.000000   4195.000000   4171.000000   4179.000000   4176.000000   \n","mean     28.658146    219.266269    439.484296    177.295525    303.052443   \n","std      14.179072    607.011289   1527.663045    560.821123   1117.186015   \n","min       0.000000      0.000000      0.000000      0.000000      0.000000   \n","25%      19.000000      0.000000      0.000000      0.000000      0.000000   \n","50%      26.000000      0.000000      0.000000      0.000000      0.000000   \n","75%      37.000000     53.000000     78.000000     33.000000     50.000000   \n","max      79.000000  11567.000000  25273.000000   8292.000000  19844.000000   \n","\n","             VRDeck  \n","count   4197.000000  \n","mean     310.710031  \n","std     1246.994742  \n","min        0.000000  \n","25%        0.000000  \n","50%        0.000000  \n","75%       36.000000  \n","max    22272.000000  "],"text/html":["\n","  <div id=\"df-2cd32a2f-cb30-49cb-a42a-87c707350aa5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4186.000000</td>\n","      <td>4195.000000</td>\n","      <td>4171.000000</td>\n","      <td>4179.000000</td>\n","      <td>4176.000000</td>\n","      <td>4197.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>28.658146</td>\n","      <td>219.266269</td>\n","      <td>439.484296</td>\n","      <td>177.295525</td>\n","      <td>303.052443</td>\n","      <td>310.710031</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>14.179072</td>\n","      <td>607.011289</td>\n","      <td>1527.663045</td>\n","      <td>560.821123</td>\n","      <td>1117.186015</td>\n","      <td>1246.994742</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>19.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>26.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>37.000000</td>\n","      <td>53.000000</td>\n","      <td>78.000000</td>\n","      <td>33.000000</td>\n","      <td>50.000000</td>\n","      <td>36.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>79.000000</td>\n","      <td>11567.000000</td>\n","      <td>25273.000000</td>\n","      <td>8292.000000</td>\n","      <td>19844.000000</td>\n","      <td>22272.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2cd32a2f-cb30-49cb-a42a-87c707350aa5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2cd32a2f-cb30-49cb-a42a-87c707350aa5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2cd32a2f-cb30-49cb-a42a-87c707350aa5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["#Analyzing Correlation Between Features via Heatmap\n","\n"],"metadata":{"id":"KPCtM89FM19W"}},{"cell_type":"code","source":["correlation = dataset.corr()\n","correlation"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"AypmTFvUXmfL","executionInfo":{"status":"ok","timestamp":1669881245981,"user_tz":-330,"elapsed":686,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"outputId":"a3673b5e-72cd-4599-8f7b-4c3826d3c8ce"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Age  RoomService  FoodCourt  ShoppingMall       Spa  \\\n","Age           1.000000     0.068723   0.130421      0.033133  0.123970   \n","RoomService   0.068723     1.000000  -0.015889      0.054480  0.010080   \n","FoodCourt     0.130421    -0.015889   1.000000     -0.014228  0.221891   \n","ShoppingMall  0.033133     0.054480  -0.014228      1.000000  0.013879   \n","Spa           0.123970     0.010080   0.221891      0.013879  1.000000   \n","VRDeck        0.101007    -0.019581   0.227995     -0.007322  0.153821   \n","Transported  -0.075026    -0.244611   0.046566      0.010141 -0.221131   \n","\n","                VRDeck  Transported  \n","Age           0.101007    -0.075026  \n","RoomService  -0.019581    -0.244611  \n","FoodCourt     0.227995     0.046566  \n","ShoppingMall -0.007322     0.010141  \n","Spa           0.153821    -0.221131  \n","VRDeck        1.000000    -0.207075  \n","Transported  -0.207075     1.000000  "],"text/html":["\n","  <div id=\"df-ceb2e036-0d40-489d-b92c-19102681ab13\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Age</th>\n","      <td>1.000000</td>\n","      <td>0.068723</td>\n","      <td>0.130421</td>\n","      <td>0.033133</td>\n","      <td>0.123970</td>\n","      <td>0.101007</td>\n","      <td>-0.075026</td>\n","    </tr>\n","    <tr>\n","      <th>RoomService</th>\n","      <td>0.068723</td>\n","      <td>1.000000</td>\n","      <td>-0.015889</td>\n","      <td>0.054480</td>\n","      <td>0.010080</td>\n","      <td>-0.019581</td>\n","      <td>-0.244611</td>\n","    </tr>\n","    <tr>\n","      <th>FoodCourt</th>\n","      <td>0.130421</td>\n","      <td>-0.015889</td>\n","      <td>1.000000</td>\n","      <td>-0.014228</td>\n","      <td>0.221891</td>\n","      <td>0.227995</td>\n","      <td>0.046566</td>\n","    </tr>\n","    <tr>\n","      <th>ShoppingMall</th>\n","      <td>0.033133</td>\n","      <td>0.054480</td>\n","      <td>-0.014228</td>\n","      <td>1.000000</td>\n","      <td>0.013879</td>\n","      <td>-0.007322</td>\n","      <td>0.010141</td>\n","    </tr>\n","    <tr>\n","      <th>Spa</th>\n","      <td>0.123970</td>\n","      <td>0.010080</td>\n","      <td>0.221891</td>\n","      <td>0.013879</td>\n","      <td>1.000000</td>\n","      <td>0.153821</td>\n","      <td>-0.221131</td>\n","    </tr>\n","    <tr>\n","      <th>VRDeck</th>\n","      <td>0.101007</td>\n","      <td>-0.019581</td>\n","      <td>0.227995</td>\n","      <td>-0.007322</td>\n","      <td>0.153821</td>\n","      <td>1.000000</td>\n","      <td>-0.207075</td>\n","    </tr>\n","    <tr>\n","      <th>Transported</th>\n","      <td>-0.075026</td>\n","      <td>-0.244611</td>\n","      <td>0.046566</td>\n","      <td>0.010141</td>\n","      <td>-0.221131</td>\n","      <td>-0.207075</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ceb2e036-0d40-489d-b92c-19102681ab13')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ceb2e036-0d40-489d-b92c-19102681ab13 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ceb2e036-0d40-489d-b92c-19102681ab13');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["sns.heatmap(correlation, annot = True, fmt=\".2f\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"Mt_Iw72KXsdd","executionInfo":{"status":"ok","timestamp":1669881247135,"user_tz":-330,"elapsed":1158,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"outputId":"3ccf614c-8285-402c-a3ae-9a5a3e200fd7"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f057abb29a0>"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Modify Train and Test Datasets"],"metadata":{"id":"0grIfzD1hCHQ"}},{"cell_type":"markdown","source":["# 1. Drop PassengerId and Name from Train and Test Dataset\n","\n","---\n","\n"],"metadata":{"id":"18jdpA0yhFii"}},{"cell_type":"code","source":["dataset.drop(['PassengerId'], axis = 1, inplace = True)\n","dataset.drop(['Name'], axis = 1, inplace = True)\n","\n","testDataset.drop(['PassengerId'], axis = 1, inplace = True)\n","testDataset.drop(['Name'], axis = 1, inplace = True)"],"metadata":{"id":"Od6vKQyShH9U","executionInfo":{"status":"ok","timestamp":1669881247136,"user_tz":-330,"elapsed":10,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["# 2. Split Cabin into Deck, Num and Side"],"metadata":{"id":"CfCpyE46iHgw"}},{"cell_type":"code","source":["dataset[['Deck', 'Num', 'Side']] = dataset['Cabin'].str.split('/', expand = True)\n","dataset.drop(['Cabin'], axis = 1, inplace = True)\n","\n","testDataset[['Deck', 'Num', 'Side']] = testDataset['Cabin'].str.split('/', expand = True)\n","testDataset.drop(['Cabin'], axis = 1, inplace = True)"],"metadata":{"id":"vrWRBIfMie2h","executionInfo":{"status":"ok","timestamp":1669881248115,"user_tz":-330,"elapsed":987,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["# 3. Perform Mean Imputation for Missing Numerical Features"],"metadata":{"id":"DW5lcWaMijYC"}},{"cell_type":"code","source":["numericalColumns = ['Age', 'RoomService', 'FoodCourt', 'ShoppingMall', 'Spa', 'VRDeck']\n","for col in numericalColumns:\n","    dataset[col].fillna((dataset[col].mean()), inplace=True)\n","    testDataset[col].fillna((testDataset[col].mean()), inplace=True)"],"metadata":{"id":"LVtzlBZQimMW","executionInfo":{"status":"ok","timestamp":1669881248116,"user_tz":-330,"elapsed":16,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["# 4. Perform Mode Imputation for Missing Categorical Features\n","\n"],"metadata":{"id":"plEjWdi4iqxh"}},{"cell_type":"code","source":["categoricalColumns = ['HomePlanet', 'CryoSleep', 'Destination', 'VIP', 'Deck', 'Num', 'Side']\n","for col in categoricalColumns:\n","    dataset[col].fillna((dataset[col].mode()[0]), inplace=True)\n","    testDataset[col].fillna((testDataset[col].mode()[0]), inplace=True)"],"metadata":{"id":"U4fjBEaDitOM","executionInfo":{"status":"ok","timestamp":1669881248117,"user_tz":-330,"elapsed":16,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["# 5. Convert Categorical Data into Numerical Data"],"metadata":{"id":"GdEXWOLDBl1y"}},{"cell_type":"code","source":["labelencoder = LabelEncoder()\n","for col in categoricalColumns:\n","    dataset[col] = labelencoder.fit_transform(dataset[col])\n","    testDataset[col] =labelencoder.fit_transform(testDataset[col])"],"metadata":{"id":"8_aGgAoMEaFZ","executionInfo":{"status":"ok","timestamp":1669881248117,"user_tz":-330,"elapsed":16,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"id":"r71SPYIWEdS2","executionInfo":{"status":"ok","timestamp":1669881248118,"user_tz":-330,"elapsed":17,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"7fab2b42-7ccf-46b4-b481-3ad49f10fb25"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   HomePlanet  CryoSleep  Destination   Age  VIP  RoomService  FoodCourt  \\\n","0           1          0            2  39.0    0          0.0        0.0   \n","1           0          0            2  24.0    0        109.0        9.0   \n","2           1          0            2  58.0    1         43.0     3576.0   \n","3           1          0            2  33.0    0          0.0     1283.0   \n","4           0          0            2  16.0    0        303.0       70.0   \n","\n","   ShoppingMall     Spa  VRDeck  Transported  Deck  Num  Side  \n","0           0.0     0.0     0.0        False     1    0     0  \n","1          25.0   549.0    44.0         True     5    0     1  \n","2           0.0  6715.0    49.0        False     0    0     1  \n","3         371.0  3329.0   193.0        False     0    0     1  \n","4         151.0   565.0     2.0         True     5    1     1  "],"text/html":["\n","  <div id=\"df-b21ce6aa-a564-4635-ac7e-d52c2c57bb02\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","      <th>Deck</th>\n","      <th>Num</th>\n","      <th>Side</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>True</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>58.0</td>\n","      <td>1</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>33.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>True</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b21ce6aa-a564-4635-ac7e-d52c2c57bb02')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b21ce6aa-a564-4635-ac7e-d52c2c57bb02 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b21ce6aa-a564-4635-ac7e-d52c2c57bb02');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["testDataset.head()"],"metadata":{"id":"ivXyKl9OBqxI","executionInfo":{"status":"ok","timestamp":1669881248119,"user_tz":-330,"elapsed":17,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"d7bfdc83-b944-4ff6-becc-f29e2141923f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   HomePlanet  CryoSleep  Destination   Age  VIP  RoomService  FoodCourt  \\\n","0           0          1            2  27.0    0          0.0        0.0   \n","1           0          0            2  19.0    0          0.0        9.0   \n","2           1          1            0  31.0    0          0.0        0.0   \n","3           1          0            2  38.0    0          0.0     6652.0   \n","4           0          0            2  20.0    0         10.0        0.0   \n","\n","   ShoppingMall     Spa  VRDeck  Deck   Num  Side  \n","0           0.0     0.0     0.0     6   820     1  \n","1           0.0  2823.0     0.0     5   927     1  \n","2           0.0     0.0     0.0     2     0     1  \n","3           0.0   181.0   585.0     2     1     1  \n","4         635.0     0.0     0.0     5  1029     1  "],"text/html":["\n","  <div id=\"df-7980f431-a5f2-4ef3-96b0-fc142d03c230\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Deck</th>\n","      <th>Num</th>\n","      <th>Side</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>820</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>2823.0</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>927</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>31.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>38.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>6652.0</td>\n","      <td>0.0</td>\n","      <td>181.0</td>\n","      <td>585.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>20.0</td>\n","      <td>0</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>635.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>1029</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7980f431-a5f2-4ef3-96b0-fc142d03c230')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7980f431-a5f2-4ef3-96b0-fc142d03c230 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7980f431-a5f2-4ef3-96b0-fc142d03c230');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["# Split Data into Dependent Features and Target Variable"],"metadata":{"id":"4VWA755dBtiS"}},{"cell_type":"code","source":["Y = dataset['Transported']\n","dataset.drop(['Transported'], axis = 1, inplace = True)\n","X = dataset"],"metadata":{"id":"n3ybiThbEmC_","executionInfo":{"status":"ok","timestamp":1669881248120,"user_tz":-330,"elapsed":17,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"id":"dYsvthTCEpQU","executionInfo":{"status":"ok","timestamp":1669881248121,"user_tz":-330,"elapsed":17,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"bd75880f-fb07-4e45-d373-5951840bbbb3"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      HomePlanet  CryoSleep  Destination   Age  VIP  RoomService  FoodCourt  \\\n","0              1          0            2  39.0    0          0.0        0.0   \n","1              0          0            2  24.0    0        109.0        9.0   \n","2              1          0            2  58.0    1         43.0     3576.0   \n","3              1          0            2  33.0    0          0.0     1283.0   \n","4              0          0            2  16.0    0        303.0       70.0   \n","...          ...        ...          ...   ...  ...          ...        ...   \n","8688           1          0            0  41.0    1          0.0     6819.0   \n","8689           0          1            1  18.0    0          0.0        0.0   \n","8690           0          0            2  26.0    0          0.0        0.0   \n","8691           1          0            0  32.0    0          0.0     1049.0   \n","8692           1          0            2  44.0    0        126.0     4688.0   \n","\n","      ShoppingMall     Spa  VRDeck  Deck   Num  Side  \n","0              0.0     0.0     0.0     1     0     0  \n","1             25.0   549.0    44.0     5     0     1  \n","2              0.0  6715.0    49.0     0     0     1  \n","3            371.0  3329.0   193.0     0     0     1  \n","4            151.0   565.0     2.0     5     1     1  \n","...            ...     ...     ...   ...   ...   ...  \n","8688           0.0  1643.0    74.0     0  1795     0  \n","8689           0.0     0.0     0.0     6   548     1  \n","8690        1872.0     1.0     0.0     6   551     1  \n","8691           0.0   353.0  3235.0     4  1385     1  \n","8692           0.0     0.0    12.0     4  1385     1  \n","\n","[8693 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-aca89897-ac81-48be-afa8-393cc9869099\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Deck</th>\n","      <th>Num</th>\n","      <th>Side</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>58.0</td>\n","      <td>1</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>33.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>41.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>1643.0</td>\n","      <td>74.0</td>\n","      <td>0</td>\n","      <td>1795</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>18.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>548</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>6</td>\n","      <td>551</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>353.0</td>\n","      <td>3235.0</td>\n","      <td>4</td>\n","      <td>1385</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>44.0</td>\n","      <td>0</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","      <td>4</td>\n","      <td>1385</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8693 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aca89897-ac81-48be-afa8-393cc9869099')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aca89897-ac81-48be-afa8-393cc9869099 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aca89897-ac81-48be-afa8-393cc9869099');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["Y"],"metadata":{"id":"zJ8uYvtNBwaC","executionInfo":{"status":"ok","timestamp":1669881248122,"user_tz":-330,"elapsed":17,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f182fc7b-d03b-4d75-8c50-d1bef2d9b7d2"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       False\n","1        True\n","2       False\n","3       False\n","4        True\n","        ...  \n","8688    False\n","8689    False\n","8690     True\n","8691    False\n","8692     True\n","Name: Transported, Length: 8693, dtype: bool"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["# Implement Random Forest Model"],"metadata":{"id":"3056jjDGByYU"}},{"cell_type":"code","source":["classifier = RandomForestClassifier()\n","classifier.fit(X, Y)\n","Y_pred = classifier.predict(testDataset)\n","result = round(classifier.score(X, Y) * 100, 2)\n","result"],"metadata":{"id":"AuDaQq1XB02z","executionInfo":{"status":"ok","timestamp":1669882061933,"user_tz":-330,"elapsed":3668,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e71839a6-afc0-4f6f-8ce0-55e37cc29643"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["99.94"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["# Transfer the Result to submission.csv"],"metadata":{"id":"6e_GlFKCB3Wu"}},{"cell_type":"code","source":["solution = pd.read_csv('/content/gdrive/My Drive/You & Me/Sem 1/BA/BA Project - Spaceship Titanic/sample_submission.csv')\n","solution['Transported'] = Y_pred\n","solution.to_csv('/content/gdrive/My Drive/You & Me/Sem 1/BA/BA Project - Spaceship Titanic/submission.csv',index=False)"],"metadata":{"id":"geRJnu-ZB9Dx","executionInfo":{"status":"ok","timestamp":1669881251211,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shreya K","userId":"18367740612542205297"}}},"execution_count":18,"outputs":[]}]}